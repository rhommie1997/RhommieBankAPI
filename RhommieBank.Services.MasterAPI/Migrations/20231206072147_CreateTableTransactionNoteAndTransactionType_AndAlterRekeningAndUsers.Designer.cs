// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhommieBank.Services.MasterAPI.Data;

#nullable disable

namespace RhommieBank.Services.MasterAPI.Migrations
{
    [DbContext(typeof(RhommieBankDbContext))]
    [Migration("20231206072147_CreateTableTransactionNoteAndTransactionType_AndAlterRekeningAndUsers")]
    partial class CreateTableTransactionNoteAndTransactionType_AndAlterRekeningAndUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Bank", b =>
                {
                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankCode");

                    b.ToTable("Bank");

                    b.HasData(
                        new
                        {
                            BankCode = "014",
                            BankName = "BCA"
                        },
                        new
                        {
                            BankCode = "002",
                            BankName = "BRI"
                        },
                        new
                        {
                            BankCode = "008",
                            BankName = "Bank Mandiri"
                        },
                        new
                        {
                            BankCode = "009",
                            BankName = "BNI"
                        });
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            age = 22,
                            created_by = "System",
                            created_dt = new DateTime(2023, 12, 6, 14, 21, 47, 587, DateTimeKind.Local).AddTicks(4078),
                            name = "Erling Haaland"
                        },
                        new
                        {
                            id = 2,
                            age = 24,
                            created_by = "System",
                            created_dt = new DateTime(2023, 12, 6, 14, 21, 47, 587, DateTimeKind.Local).AddTicks(4096),
                            name = "Kylian Mbappe"
                        });
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Rekening", b =>
                {
                    b.Property<string>("no_rekening")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_dt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<int>("person_id")
                        .HasColumnType("int");

                    b.Property<decimal>("saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("no_rekening");

                    b.HasIndex("BankCode");

                    b.HasIndex("person_id");

                    b.ToTable("Rekening");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.TransactionNote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rekeningTransferFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rekeningTransferTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("transactionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transactionTypeID")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("rekeningTransferFrom");

                    b.HasIndex("rekeningTransferTo");

                    b.HasIndex("transactionTypeID");

                    b.ToTable("TransactionNote");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.TransactionType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Charges = 0m,
                            TransactionTypeName = "In-House"
                        },
                        new
                        {
                            id = 2,
                            Charges = 7000m,
                            TransactionTypeName = "Domestic"
                        },
                        new
                        {
                            id = 3,
                            Charges = 45000m,
                            TransactionTypeName = "International"
                        });
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("UserLogins");

                    b.HasData(
                        new
                        {
                            username = "rhommie",
                            PersonID = 0,
                            email = "rhommie.1997@gmail.com",
                            isAdmin = true,
                            nickname = "Rhommie",
                            password = "123"
                        });
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Rekening", b =>
                {
                    b.HasOne("RhommieBank.Services.MasterAPI.Models.Bank", "Bank")
                        .WithMany("Rekenings")
                        .HasForeignKey("BankCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhommieBank.Services.MasterAPI.Models.Person", "Person")
                        .WithMany("Rekenings")
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.TransactionNote", b =>
                {
                    b.HasOne("RhommieBank.Services.MasterAPI.Models.Rekening", "TransferFrom")
                        .WithMany("TransactionsFrom")
                        .HasForeignKey("rekeningTransferFrom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RhommieBank.Services.MasterAPI.Models.Rekening", "TransferTo")
                        .WithMany("TransactionsTo")
                        .HasForeignKey("rekeningTransferTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RhommieBank.Services.MasterAPI.Models.TransactionType", "TransactionType")
                        .WithMany("TransactionNotes")
                        .HasForeignKey("transactionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionType");

                    b.Navigation("TransferFrom");

                    b.Navigation("TransferTo");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Bank", b =>
                {
                    b.Navigation("Rekenings");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Person", b =>
                {
                    b.Navigation("Rekenings");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.Rekening", b =>
                {
                    b.Navigation("TransactionsFrom");

                    b.Navigation("TransactionsTo");
                });

            modelBuilder.Entity("RhommieBank.Services.MasterAPI.Models.TransactionType", b =>
                {
                    b.Navigation("TransactionNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
